{"version":3,"sources":["redux/actions.js","apiServices.js","redux/auth/authOperations.js","redux/auth/authActions.js","redux/reducer.js","redux/auth/authReducer.js","redux/store.js","redux/auth/authSelectors.js","Components/App.js","index.js"],"names":["addContactsReguests","createAction","addContactsSuccess","addContactsError","deleteContactsReguests","deleteContactsSuccess","deleteContactsError","getContactsReguests","getContactsSuccess","getContactsError","changeFilter","axios","defaults","baseURL","token","headers","common","Authorization","userRegisterApi","name","email","password","post","then","data","catch","err","userLoginApi","userLogOutApi","userRefreshApi","persistedToken","get","addContactsApi","number","id","getContactsApi","deleteContactsApi","contactId","delete","userRegister","dispatch","a","userRegisterReguests","userReg","userRegisterSuccess","userRegisterError","userLogin","userLoginReguests","userLog","userLoginSuccess","userLoginError","userLogOut","userLogOutReguests","userLogOutSuccess","userLogOutError","userRefresh","getState","auth","userRefreshReguests","userRefreshSuccess","userRefreshError","itemsReducer","createReducer","actions","_","payload","state","filter","contact","filterReducer","contactsReducer","combineReducers","items","setError","resetError","errorReducer","initialState","userReducer","user","tokenReducer","isLoggedInReducer","isRefreshReducer","authReducer","isLoggedIn","isRefresh","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","persistReducer","error","devTools","process","persistor","persistStore","authSelectors","getIsLoggedIn","getUserName","getIsRefresh","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useDispatch","useSelector","useEffect","className","exact","to","activeClassName","type","onClick","fallback","path","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d39a7cf7.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const addContactsReguests = createAction('contacts/addRequests');\nexport const addContactsSuccess = createAction('contacts/addSuccess');\nexport const addContactsError = createAction('contacts/addError');\n\nexport const deleteContactsReguests = createAction('contacts/deleteRequests');\nexport const deleteContactsSuccess = createAction('contacts/deleteSuccess');\nexport const deleteContactsError = createAction('contacts/deleteError');\n\nexport const getContactsReguests = createAction('contacts/getRequests');\nexport const getContactsSuccess = createAction('contacts/getSuccess');\nexport const getContactsError = createAction('contacts/getError');\n\nexport const changeFilter = createAction('contacts/FILTER');\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const userRegisterApi = ({ name, email, password }) => {\n  return axios\n    .post('/users/signup', { name, email, password })\n    .then(({ data }) => {\n      token.set(data.token);\n      return data;\n    })\n    .catch(err => {\n      throw err;\n    });\n};\n\nexport const userLoginApi = ({ email, password }) => {\n  return axios\n    .post('/users/login', { email, password })\n    .then(({ data }) => {\n      token.set(data.token);\n      return data;\n    })\n    .catch(err => {\n      throw err;\n    });\n};\n\nexport const userLogOutApi = () => {\n  return axios\n    .post('/users/logout')\n    .then(() => {\n      token.unset();\n    })\n    .catch(err => {\n      throw err;\n    });\n};\n\nexport const userRefreshApi = persistedToken => {\n  token.set(persistedToken);\n  return axios\n    .get('/users/current')\n    .then(({ data }) => {\n      return data;\n    })\n    .catch(err => {\n      throw err;\n    });\n};\n\nexport const addContactsApi = ({ name, number, id }) => {\n  return axios\n    .post('/contacts', { name, number, id })\n    .then(({ data }) => data)\n    .catch(err => {\n      throw err;\n    });\n};\n\nexport const getContactsApi = () => {\n  return axios\n    .get('/contacts')\n    .then(({ data }) => data)\n    .catch(err => {\n      throw err;\n    });\n};\n\nexport const deleteContactsApi = contactId => {\n  return axios\n    .delete(`/contacts/${contactId}`)\n    .then(({ data }) => data)\n    .catch(err => {\n      throw err;\n    });\n};\n","import {\r\n  userLoginApi,\r\n  userLogOutApi,\r\n  userRefreshApi,\r\n  userRegisterApi,\r\n} from '../../apiServices';\r\nimport {\r\n  userLoginError,\r\n  userLoginReguests,\r\n  userLoginSuccess,\r\n  userLogOutError,\r\n  userLogOutReguests,\r\n  userLogOutSuccess,\r\n  userRefreshError,\r\n  userRefreshReguests,\r\n  userRefreshSuccess,\r\n  userRegisterError,\r\n  userRegisterReguests,\r\n  userRegisterSuccess,\r\n} from './authActions';\r\n\r\nexport const userRegister =\r\n  ({ name, email, password }) =>\r\n  async dispatch => {\r\n    dispatch(userRegisterReguests());\r\n    try {\r\n      const userReg = await userRegisterApi({ name, email, password });\r\n      dispatch(userRegisterSuccess(userReg));\r\n    } catch (error) {\r\n      dispatch(userRegisterError(error));\r\n    }\r\n  };\r\n\r\nexport const userLogin =\r\n  ({ email, password }) =>\r\n  async dispatch => {\r\n    dispatch(userLoginReguests());\r\n    try {\r\n      const userLog = await userLoginApi({ email, password });\r\n      dispatch(userLoginSuccess(userLog));\r\n    } catch (error) {\r\n      dispatch(userLoginError(error));\r\n    }\r\n  };\r\n\r\nexport const userLogOut = () => async dispatch => {\r\n  dispatch(userLogOutReguests());\r\n  try {\r\n    await userLogOutApi();\r\n    dispatch(userLogOutSuccess());\r\n  } catch (error) {\r\n    dispatch(userLogOutError(error));\r\n  }\r\n};\r\n\r\nexport const userRefresh = () => async (dispatch, getState) => {\r\n  const persistedToken = getState().auth.token;\r\n  if (persistedToken === null) {\r\n    return;\r\n  }\r\n  dispatch(userRefreshReguests());\r\n  try {\r\n    const userRefresh = await userRefreshApi(persistedToken);\r\n    dispatch(userRefreshSuccess(userRefresh));\r\n  } catch (error) {\r\n    dispatch(userRefreshError(error));\r\n  }\r\n};\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const userRegisterReguests = createAction('auth/registerRequests');\r\nexport const userRegisterSuccess = createAction('auth/registerSuccess');\r\nexport const userRegisterError = createAction('auth/registerError');\r\n\r\nexport const userLoginReguests = createAction('auth/loginRequests');\r\nexport const userLoginSuccess = createAction('auth/loginSuccess');\r\nexport const userLoginError = createAction('auth/loginError');\r\n\r\nexport const userLogOutReguests = createAction('auth/logOutRequests');\r\nexport const userLogOutSuccess = createAction('auth/logOutSuccess');\r\nexport const userLogOutError = createAction('auth/logOutError');\r\n\r\nexport const userRefreshReguests = createAction('auth/refreshRequests');\r\nexport const userRefreshSuccess = createAction('auth/refreshSuccess');\r\nexport const userRefreshError = createAction('auth/refreshError');\r\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './actions';\n\nconst itemsReducer = createReducer([], {\n  [actions.getContactsSuccess]: (_, { payload }) => payload,\n  [actions.addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [actions.deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nconst setError = (_, { payload }) => payload;\nconst resetError = () => null;\n\nexport const errorReducer = createReducer(null, {\n  [actions.getContactsReguests]: resetError,\n  [actions.getContactsError]: setError,\n  [actions.addContactsReguests]: resetError,\n  [actions.addContactsError]: setError,\n  [actions.deleteContactsReguests]: resetError,\n  [actions.deleteContactsError]: setError,\n});\n\nexport default contactsReducer;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  userLoginSuccess,\r\n  userLogOutSuccess,\r\n  userRefreshError,\r\n  userRefreshReguests,\r\n  userRefreshSuccess,\r\n  userRegisterSuccess,\r\n} from './authActions';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isRefresh: false,\r\n};\r\n\r\nconst userReducer = createReducer(initialState.user, {\r\n  [userRegisterSuccess]: (_, { payload }) => payload.user,\r\n  [userLoginSuccess]: (_, { payload }) => payload.user,\r\n  [userLogOutSuccess]: () => initialState.user,\r\n  [userRefreshSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst tokenReducer = createReducer(null, {\r\n  [userRegisterSuccess]: (_, { payload }) => payload.token,\r\n  [userLoginSuccess]: (_, { payload }) => payload.token,\r\n  [userLogOutSuccess]: () => null,\r\n});\r\n\r\nconst isLoggedInReducer = createReducer(false, {\r\n  [userRegisterSuccess]: () => true,\r\n  [userLoginSuccess]: () => true,\r\n  [userLogOutSuccess]: () => false,\r\n  [userRefreshSuccess]: () => true,\r\n});\r\n\r\nconst isRefreshReducer = createReducer(false, {\r\n  [userRefreshReguests]: () => true,\r\n  [userRefreshSuccess]: () => false,\r\n  [userRefreshError]: () => false,\r\n});\r\n\r\nconst authReducer = combineReducers({\r\n  user: userReducer,\r\n  token: tokenReducer,\r\n  isLoggedIn: isLoggedInReducer,\r\n  isRefresh: isRefreshReducer,\r\n});\r\n\r\nexport default authReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport logger from 'redux-logger';\nimport contactsReducer from './reducer';\n\nimport { errorReducer } from './reducer';\nimport authReducer from './auth/authReducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n    error: errorReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nconst getUserName = state => state.auth.user.name;\r\nconst getIsRefresh = state => state.auth.isRefresh;\r\n\r\nconst authSelectors = { getIsLoggedIn, getUserName, getIsRefresh };\r\n\r\nexport default authSelectors;\r\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { lazy, Suspense } from 'react';\nimport { NavLink, Route, Switch, Redirect } from 'react-router-dom';\nimport authSelectors from '../redux/auth/authSelectors';\nimport { userLogOut, userRefresh } from '../redux/auth/authOperations';\n\nconst HomeView = lazy(() =>\n  import('../views/HomeView' /* webpackChunkName: \"home-page\" */),\n);\nconst RegisterView = lazy(() =>\n  import('../views/RegisterView' /* webpackChunkName: \"register-page\" */),\n);\nconst LoginView = lazy(() =>\n  import('../views/LoginView' /* webpackChunkName: \"login-page\" */),\n);\nconst ContactsView = lazy(() =>\n  import('../views/ContactsView' /* webpackChunkName: \"contacts-page\" */),\n);\n\nfunction App() {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const name = useSelector(authSelectors.getUserName);\n  const isRefresh = useSelector(authSelectors.getIsRefresh);\n\n  useEffect(() => {\n    dispatch(userRefresh());\n  }, [dispatch]);\n\n  return (\n    <>\n      <nav className=\"container navContainer \">\n        <NavLink exact to=\"/\" className=\"link\" activeClassName=\"activeLink\">\n          Phonebook\n        </NavLink>\n        {!isLoggedIn && !isRefresh && (\n          <div>\n            <NavLink\n              to=\"/register\"\n              className=\"link\"\n              activeClassName=\"activeLink\"\n            >\n              SignUp\n            </NavLink>\n            <NavLink to=\"/login\" className=\"link\" activeClassName=\"activeLink\">\n              LogIn\n            </NavLink>\n          </div>\n        )}\n        {isLoggedIn && !isRefresh && (\n          <div>\n            <span className=\"navText\">Welcome, {name}</span>\n            <button\n              className=\"button\"\n              type=\"button\"\n              onClick={() => dispatch(userLogOut())}\n            >\n              LogOut\n            </button>\n          </div>\n        )}\n      </nav>\n\n      <Suspense fallback={<div>Loading...</div>}>\n        {!isRefresh && isLoggedIn && (\n          <Switch>\n            <Route path=\"/contacts\">\n              <ContactsView />\n            </Route>\n            <Redirect to=\"/contacts\" />\n          </Switch>\n        )}\n        {!isRefresh && !isLoggedIn && (\n          <Switch>\n            <Route exact path=\"/\">\n              <HomeView />\n            </Route>\n            <Route path=\"/register\">\n              <RegisterView />\n            </Route>\n            <Route path=\"/login\">\n              <LoginView />\n            </Route>\n            <Redirect to=\"/\" />\n          </Switch>\n        )}\n      </Suspense>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\n\nimport App from './Components/App';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}